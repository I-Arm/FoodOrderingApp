import java.awt.Font;
import java.io.*;
import java.nio.charset.StandardCharsets;
import java.util.*;

import javax.swing.UIManager;

public class FoodMenuLoader {
    // ... (loadFoodFromCSV ‡πÅ‡∏•‡∏∞ saveFoodToCSV ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) ...
    public static List<Food> loadFoodFromCSV(String filename) {
        List<Food> foodList = new ArrayList<>();

        try (BufferedReader br = new BufferedReader(
                new InputStreamReader(new FileInputStream(filename), StandardCharsets.UTF_8))) {
                    
            String line;
            br.readLine(); // ‡∏Ç‡πâ‡∏≤‡∏° header
            while ((line = br.readLine()) != null) {
                String[] parts = line.split(",");
                if (parts.length == 5) { // ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ 5 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
                    String name = parts[0];
                    // ... (‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) ...
                    double normal = Double.parseDouble(parts[1]);
                    double special = Double.parseDouble(parts[2]);
                    String img = parts[3];
                    String category = parts[4];
                    
                    foodList.add(new Food(name, normal, special, img, category));
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return foodList;
    }

    // üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á CSV
    public static void saveFoodToCSV(String filename, List<Food> foodList) {
        try (BufferedWriter bw = new BufferedWriter(
                new OutputStreamWriter(new FileOutputStream(filename), StandardCharsets.UTF_8))) {

            // ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô header
            bw.write("Name,NormalPrice,SpecialPrice,Image,Category");
            bw.newLine();

            // ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            for (Food f : foodList) {
                bw.write(f.getName() + "," +
                         f.getNormalPrice() + "," +
                         f.getSpecialPrice() + "," + // ‡πÉ‡∏ä‡πâ getSpecialPrice
                         f.getImagePath() + "," +
                         f.getCategory());
                bw.newLine();
            }

            System.out.println("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");

        } catch (IOException e) {
            e.printStackTrace();
        }
    }


    // ‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà
    public static void addFood(List<Food> foodList, String name, double normal, double special, String img, String category) {
        foodList.add(new Food(name, normal, special, img, category));
        System.out.println("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢: " + name);
    }

    // ‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ï‡∏≤‡∏°‡∏ä‡∏∑‡πà‡∏≠
    public static void editFood(List<Food> foodList, String oldName, String newName, Double newNormal, Double newSpecial, String newImg, String newCategory) {
        for (Food f : foodList) {
            if (f.getName().equalsIgnoreCase(oldName)) {
                if (newName != null && !newName.isEmpty()) f.setName(newName);
                if (newNormal != null) f.setNormalPrice(newNormal);
                if (newSpecial != null) f.setSpecialPrice(newSpecial); // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏õ‡πá‡∏ô setSpecialPrice
                if (newImg != null && !newImg.isEmpty()) f.setImagePath(newImg); // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏õ‡πá‡∏ô setImagePath
                if (newCategory != null && !newCategory.isEmpty()) f.setCategory(newCategory);
                System.out.println("‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢: " + oldName + " ‚Üí " + f.getName());
                return;
            }
        }
        System.out.println("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏ä‡∏∑‡πà‡∏≠: " + oldName);
    }

    // ‚ùå ‡∏•‡∏ö‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ï‡∏≤‡∏°‡∏ä‡∏∑‡πà‡∏≠
    public static void deleteFood(List<Food> foodList, String name) {
        Iterator<Food> iterator = foodList.iterator();
        while (iterator.hasNext()) {
            Food f = iterator.next();
            if (f.getName().equalsIgnoreCase(name)) {
                iterator.remove();
                System.out.println("üóëÔ∏è ‡∏•‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢: " + name);
                return;
            }
        }
        System.out.println("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏ä‡∏∑‡πà‡∏≠: " + name);
    }
    
    // *************** ‡πÄ‡∏°‡∏ò‡∏≠‡∏î‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡πÉ‡∏ô Admin Panel ***************
    /**
     * ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó foodList ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô DefaultTableModel
     * @param model DefaultTableModel ‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤ Admin
     * @param foodList foodList ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó
     */
    public static void updateFoodListFromAdminModel(javax.swing.table.DefaultTableModel model, List<Food> foodList) {
        foodList.clear(); // ‡∏•‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πà‡∏≤

        for (int i = 0; i < model.getRowCount(); i++) {
            String name = model.getValueAt(i, 0).toString();
            double normal = Double.parseDouble(model.getValueAt(i, 1).toString());
            double special = Double.parseDouble(model.getValueAt(i, 2).toString());
            String img = model.getValueAt(i, 3).toString();
            String category = model.getValueAt(i, 4).toString();

            foodList.add(new Food(name, normal, special, img, category));
        }

        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á CSV ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
        saveFoodToCSV("data/menu.csv", foodList);
    }
    // ***************************************************************
    
    // ... (main method ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) ...
    public static void main(String[] args) {
        String filename = "food.csv";
        List<Food> foods = loadFoodFromCSV(filename);

        // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏° / ‡∏•‡∏ö / ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
        addFood(foods, "‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡∏Å‡∏∏‡πâ‡∏á", 45, 55, "img/friedrice.png", "‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏à‡∏≤‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß");
        editFood(foods, "‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡∏Å‡∏∏‡πâ‡∏á", "‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡∏ó‡∏∞‡πÄ‡∏•", 50.0, 60.0, null, "‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏∞‡πÄ‡∏•");
        deleteFood(foods, "‡∏ï‡πâ‡∏°‡∏¢‡∏≥‡∏Å‡∏∏‡πâ‡∏á");

        saveFoodToCSV(filename, foods);
    }
}